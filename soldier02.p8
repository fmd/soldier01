pico-8 cartridge // http://www.pico-8.com
version 29
__lua__
function dump(o)if type(o)=='table'then local s='{ 'for b,v in pairs(o)do if type(b)~='number'then b='"'..b..'"'end;s=s..'['..b..'] = '..dump(v)..','end;return s..'} 'else return tostring(o)end end;raw_sprite_store="floor=181|void=255|select=46|choose=30|bad=15|vault=31"raw_map_store="actor_player=17,1,33,49|actor_enemy=208,192,224,240|door_multidoor=88,89|door_keydoor=104,105|item_ration=180|item_keycard=185|item_equip=133|object_trapdoor=176|object_relay=132|object_multikey=136"raw_animations="player=17,18,19,18,21,23,22,20:1,2,3,2,5,7,6,4:33,34,35,34,37,39,38,36:49,50,51,50,53,55,55,52:8,9,10,11:12,13:25,24,25,24|enemy=208,209,210,209,210,211,211,1:192,193,194,193,194,195,195,1:224,225,226,225,226,227,227,1:240,241,242,241,242,243,243,1:196,197,198,199:230,231:41,40,41,40:228,229|door=67,129:68,130|keydoor=104,160:105,161|multidoor=88,144:89,145|multikey=136,137|blood_prints=26,27,28,29|trapdoor=176,177|relay=132,186|ration=180|equip=133|keycard=185"raw_global_objects="actor=nil|object=nil|relay=nil|door=nil|trapdoor=nil|prints=nil|item=nil|multikey=nil"function unmarshal_store(e)local g={}elements=split(e,"|")for j in all(elements)do split_elements=split(j,"=")key,value=split_elements[1],split_elements[2]if split_elements[2]=="nil"then g[key]={}else split_values=split(value,":")g[key]={}for s in all(split_values)do split_commas=split(s)local k={}if#split_commas==1 then add(k,split_commas[1])else add(k,split_commas)end;if#k==1 then k=k[1]end;add(g[key],k)end;if#g[key]==1 then g[key]=g[key][1]end end end;return g end;sprite_store=unmarshal_store(raw_sprite_store)map_store=unmarshal_store(raw_map_store)animations=unmarshal_store(raw_animations)enemy_variants={player={{"player",{5,5}}},enemy={{"clockwise",{5,13}},{"line",{5,2}},{"still",{5,5}},{"cc",{5,6}}}}levels={{0,0,36,30}}level_items={{"diving_suit","gloves"}}level_keydoors={{2,1,1,2,2}}level_multidoors={{{{11,18}},{{23,24},{25,27}}}}level_enemy_variants={{2,2,3,3,3,3,2,4,3,2,1,4,1,1,3,2,1,2,2,3,3,3,2,1,3,1,3,1,1}}turn,chunk,frame,biframe,last_frame=0,0,1,1,0;global_time,turn_start=nil,nil;input_act,input_dir,input_down=0,0,{false,false,false,false,false,false}last_camera_pos={x=0,y=0}queued_input=nil;level_loaded=false;current_level=0;game_speed=2.5;local n={}local q={}local r={}local u={}local w={}local x={}local y={}function reset_global_objects()global_objects=unmarshal_store(raw_global_objects)inventory={}global_object_counts={}queued_input=nil end;mset_restore={}checkpoint={active_relays={},inventory={keycard_level=0,gloves=false,diving_suit=false,socom=false}}function _init()load_level(1)end;function _update60()if not level_loaded or not player then return end;local z=take_input()if z and z[1]>1 and player.life<=0 then load_level(current_level)return end;if z and not queued_input then queued_input=z end;update_frame()if turn_start then if chunk>999 then end_turn()end;return end;if player.life>0 then if queued_input and queued_input[1]>4 then queued_input[1]=queued_input[1]-3 end;player.input_act=queued_input;queued_input=nil;if not player.input_act then return end;player:determine_act()if player:act_pos()==player.pos and player.input_act[1]==1 then return end;start_turn()player.input_act=nil end;if not turn_start and chunk>499 then start_turn()end end;function _draw()cls()if not level_loaded or not player then return end;local p=to_pixel(player.pos)buffer=make_vec2d(0,0)if p~=last_camera_pos then buffer=p-last_camera_pos;buffer.x=-flr(buffer.x/1.5)buffer.y=-flr(buffer.y/1.5)end;camera(p.x+buffer.x-56,p.y+buffer.y-56)last_camera_pos=p+buffer;draw_map()draw_set(global_objects.object)draw_set(global_objects.actor)draw_set({player})local v=make_vec2d(player.pos.x,player.pos.y)local A=sprite_store.select;local B=false;local C=player.act;if C and C[1]==1 then local p=v+dir_to_vec(C[2])if p:is_vault_gate()and inventory.gloves then p=p+dir_to_vec(C[2])end;if p:is_wall()then B=true end;if not B then v=p end end;if queued_input and queued_input[1]==1 then local p=v+dir_to_vec(queued_input[2])if p:is_vault_gate()and inventory.gloves then p=p+dir_to_vec(queued_input[2])end;if p:is_wall()then B=true end;if not B then v=p end end;local D=to_pixel(v)B=false;if v~=player.pos then zspr(A,D.x,D.y)end;if input_act==1 and not queued_input then A=sprite_store.select;local E=false;local p=dir_to_vec(input_dir)+v;if p:is_wall()then B=true end;if p:is_vault_gate()and inventory.gloves then B=false;E=true end;local D=to_pixel(p)A=sprite_store.choose;if B then A=sprite_store.bad end;if E then A=sprite_store.vault end;zspr(A,D.x,D.y)end;if input_act==5 then zspr(57,p.x+4,p.y-7,1)end;if input_act==6 then zspr(56,p.x+4,p.y-7,1)end;camera(0,0)draw_bar("life",player.life,player.max_life,3,2,0)if player:in_water()then draw_bar("o2",player.o2,player.max_o2,12,1,1)end;if inventory.keycard_level>0 then draw_keycard_ui()end;if player.blood_prints>0 then draw_blood_ui()end;rectcolor=3;if turn_start~=nil then rectcolor=5 end;rect(0,0,127,127,rectcolor)end;function load_level(l)level_loaded=false;reset_global_objects()player=nil;inventory=copymt(checkpoint.inventory)global_time=time()restore_msets(current_level)current_level=l;for F=0,levels[l][4]-1,1 do for G=0,levels[l][3]-1,1 do local v=make_vec2d(G,F)local t=lmapget(v,l)local o=get_tile_pattern(t)if o then add(mset_restore,{v,t})lmapset(v,l,extract_object_from_map(v,o))end end end;c=checkpoint.current_relay;if c then local a=make_actor(make_vec2d(c.x,c.y),{"actor","player",2})add(global_objects.actor,a)player=a end;level_loaded=true end;function extract_object_from_map(H,I)local J={}if I[1]=="actor"then if I[2]~="player"or not checkpoint.current_relay then J=make_actor(H,I)add(global_objects.actor,J)if I[2]=="player"then player=J end end else J=make_object(H,I)if I[1]=="object"then add(global_objects[I[2]],J)else add(global_objects[I[1]],J)end;if I[2]=="trapdoor"or I[1]=="door"then return sprite_store.void end end;return sprite_store.floor end;function make_object(H,I,K)local t={pattern=I[1],subpattern=I[2],pos=make_vec2d(H.x,H.y),facing=I[3]or 1}mt=copymt(q)mk="make_"..t.subpattern;if not global_object_counts[t.subpattern]then global_object_counts[t.subpattern]=0 end;global_object_counts[t.subpattern]=global_object_counts[t.subpattern]+1;mmm=u[mk]if not K then mmm(t,mt)add(global_objects.object,t)end;setmetatable(t,mt)return t end;function make_actor(H,I)local t=make_object(H,I,true)t.life,t.max_life=1,1;t.aquatic=false;t.variant=level_enemy_variants[current_level][global_object_counts[t.subpattern]]t.blood_prints,t.stunned_turns=0,0;t.laser={frames=0,target=make_vec2d(0,0),dir=0,tiles={}}t.frames={n=0,pattern=""}t.act={0,0}local mt=copymt(n)if I[2]=="player"then u.make_player(t,mt)end;setmetatable(t,mt)return t end;function u.make_player(t,mt)t.aquatic=true;t.variant=1;t.life,t.max_life=3,3;local L=3;if inventory.diving_suit then L=6 end;t.o2,t.max_o2=L,L;function mt.__index.determine_act(self)self.act=copymt(self.input_act)self:turn_to_face_act()end;function mt.__index.act_pos(self)local M=x.act_pos(self)if not inventory.gloves or not(self.act[2]>0)then return M end;local d=dir_to_vec(self.act[2])if(d+self.pos):is_vault_gate()and self.act[1]==1 then local N=d+d+self.pos;if N:is_wall()then return make_vec2d(self.pos.x,self.pos.y)end;return N end;return M end end;function make_item(t,mt)function mt.__index.activate(self)if self.pos==player.pos then self:pick_up()del(global_objects.item,self)del(global_objects.object,self)end end;function mt.__index.pick_up(self)end;function mt.__index.draw(self)local p=to_pixel(self.pos)local O=abs(biframe-4)-3;if not turn_start then O=3 end;zspr(self:sprite(),p.x,p.y-O)end end;function u.make_door(t,mt)t.solid=1;function mt.__index.draw(self)end;function mt.__index.draw_above(self)local p=to_pixel(self.pos)zspr(animations[self.subpattern][self.facing][1-self.solid+1],p.x,p.y)end end;function u.make_multidoor(t,mt)t.scanner_positions=level_multidoors[current_level][global_object_counts["multidoor"]]u.make_door(t,mt)function mt.__index.activate(self)if self.solid==0 then return end;local P=true;for p in all(self.scanner_positions)do local s=make_vec2d(p[1],p[2])local o=s:objects_on_here(nil,"multikey")[1]if not o or o.activated~=1 then P=false end end;if P then self.solid=0;sfx(16)end end end;function u.make_keydoor(t,mt)t.keycard_level=level_keydoors[current_level][global_object_counts["keydoor"]]u.make_door(t,mt)function mt.__index.activate(self)if self.solid==0 then return end;if self.pos:is_adjacent(player.pos)then if inventory.keycard_level>=self.keycard_level then sfx(16)self.solid=0 else sfx(17)end end end end;function u.make_relay(t,mt)t.active=0;for p in all(checkpoint.active_relays)do if t.pos==p then t.active=1 end end;local c=checkpoint.current_relay;function mt.__index.activate(self)if player.life<=0 or player.pos~=self.pos or self.active~=0 then return end;sfx(18)self.active=1;v=make_vec2d(self.pos.x,self.pos.y)del(checkpoint.active_relays,v)add(checkpoint.active_relays,v)player.life=player.max_life;checkpoint.inventory=copymt(inventory)checkpoint.current_relay=copymt(self.pos)end;function mt.__index.sprite(self)return animations.relay[self.active+1]end end;function u.make_keycard(t,mt)make_item(t,mt)function mt.__index.pick_up(self)if player.life<=0 then return end;inventory.keycard_level=inventory.keycard_level+1;sfx(14)end end;function u.make_ration(t,mt)make_item(t,mt)function mt.__index.pick_up(self)if player.life<=0 then return end;player.life=player.max_life;sfx(15)end end;function u.make_equip(t,mt)make_item(t,mt)t.equip=level_items[current_level][global_object_counts["equip"]]function mt.__index.pick_up(self)inventory[t.equip]=true;if t.equip=="diving_suit"then player.max_o2=6;player.o2=6 end;sfx(21)end end;function u.make_multikey(t,mt)t.activated=0;function mt.__index.draw(self)local p=to_pixel(self.pos)zspr(animations[self.subpattern][self.activated+1],p.x,p.y)end;function mt.__index.activate(self)local Q=self.pos:actors_on_here()if not Q then return end;for a in all(Q)do if a.life>0 and a~=player then self.activated=1-self.activated;sfx(20-self.activated)return end end end end;function u.make_trapdoor(t,mt)t.timer=false;function mt.__index.activate(self)if self.timer then self.timer=false;self.facing=2;sfx(13)end;local Q=self.pos:actors_on_here()if not Q then return end;for a in all(Q)do if a.life>-2 then if self.facing==1 then sfx(11)self.timer=true;return end;sfx(5)a:fall()end end end end;function get_tile_pattern(R)for pattern,S in pairs(map_store)do local p=split(pattern,"_")if not check_type(S,"table")then if S==R then return{p[1],p[2],1}end else for f,i in pairs(S)do if i==R then return{p[1],p[2],f}end end end end;return nil end;function restore_msets(l)for m in all(mset_restore)do mset(m[1].x+levels[l][1],m[1].y+levels[l][2],m[2])end;mset_restore={}end;function lmapget(v,l)l=l or current_level;return mget(v.x+levels[l][1],v.y+levels[l][2])end;function lmapset(v,l,R)mset(v.x+levels[l][1],v.y+levels[l][2],R)end;function start_turn()for T in all(global_objects.actor)do if T.life>0 then T:determine_act()T:pickup_prints()if T.blood_prints>=1 then T:place_new_prints("blood_prints")end end end;local U=true;while U do U=false;for T in all(global_objects.actor)do if T~=player and T.life>0 then U=T:do_avoidance()or U end end end;turn=turn+1;global_time=time()turn_start=time()update_frame()end;function end_turn()turn_start=nil;global_time=time()if player.blood_prints>=1 then player:redirect_existing_prints("blood_prints")end;for a in all(global_objects.actor)do a:tick_oxygen()if a.blood_prints>=1 then a.blood_prints=a.blood_prints-1 end;if a~=player then a:attempt_act(1)end end;player:attempt_melee()player:attempt_act(1)for a in all(global_objects.actor)do a:attempt_act(2)a.act={0,0}end;for o in all(global_objects.object)do o:activate()end end;function btnpress(i)if i>4 then input_act=i;if input_dir==0 then input_dir=player.facing end else input_dir=i;if input_act<5 then input_act=1 end end end;function take_input()local V={btn(2),btn(1),btn(3),btn(0),btn(4),btn(5)}for i=1,6 do if V[i]and not input_down[i]then input_down[i]=true;btnpress(i)elseif not V[i]and input_down[i]then input_down[i]=false;temp_act=input_act;if input_act==i or input_dir==i and input_act==1 then input_act=0;return{temp_act,input_dir}end end end;return nil end;function cut_chunk(c,v,m)return mid(1,flr(c/v)+1,m)end;function update_frame()chunk=flr((time()-global_time)*1000*game_speed)frame=cut_chunk(chunk,250,4)biframe=cut_chunk(chunk,125,8)if frame~=last_frame and chunk>250 then roll_frame()last_frame=frame end end;function roll_frame()for a in all(global_objects.actor)do if a.laser.frames>0 then a.laser.frames=a.laser.frames-1 end;if a.frames.n>0 then a.frames.n=a.frames.n-1 end end end;function zspr(W,X,Y,Z,_,h,ssw,ssh)local v=n_to_vec(W)_=_ or 1;h=h or 1;ssw=ssw or 8;ssh=ssh or 8;Z=Z or 2;sw,sh=ssw*_,ssh*h;dw,dh=sw*Z,sh*Z;sspr(v.x,v.y,sw,sh,X,Y,dw,dh)end;function draw_set(a0)for o in all(a0)do o:draw_below()end;for o in all(a0)do o:draw()end;for o in all(a0)do o:draw_above()end end;function draw_map()for F=levels[current_level][2],levels[current_level][4]-1,1 do if F<player.pos.y+5 and F>player.pos.y-5 then for G=levels[current_level][1],levels[current_level][3]-1,1 do if G>player.pos.x-5 and G<player.pos.x+5 then local v=make_vec2d(G,F)local a1=to_pixel(v)local R=lmapget(v)if R>0 then zspr(R,a1.x,a1.y)end end end end end end;function draw_bar(a2,a3,a4,a5,a6,a7)barp=a7*10;rect(2,2+barp,a4*5+3,7+barp,6)rectfill(3,3+barp,a4*5+2,6+barp,a6)if a3>0 then rectfill(3,3+barp,a3*5+2,6+barp,a5)end;print(a2,4,6+barp,7)end;function draw_blood_ui()spr(143,112,3)print(player.blood_prints,121,4,7)end;function draw_keycard_ui()spr(185,85,3)print("lv."..inventory.keycard_level,93,4,7)end;function default_sprite(a8,a9)s=animations[a8]if not check_type(s,"table")then return s end;if a9<=0 or not a9 then return s[1]end;if not check_type(s[a9],"table")then return s[a9]end;return s[a9][1]end;function w.sprite(self)return default_sprite(self.subpattern,self.facing)end;function w.draw(self)local p=to_pixel(self.pos)zspr(self:sprite(),p.x,p.y)end;function w.draw_below(self)end;function w.draw_above(self)end;function w.activate(self)end;q.__index=w;function x.act_pos(self)local a=self.act[1]local d=self.act[2]if d==0 then return self.pos end;local aa=self.pos+dir_to_vec(d)if a==1 then if not aa:is_wall()and(not aa:is_water()or self.aquatic)then return aa end end;return self.pos end;function x.attempt_melee(self)if self.life<=0 then return end;attack_point=self:act_pos()h=attack_point:actors_on_here("player")for a in all(h)do if a.life>0 then a.stunned_turns=3 end end end;function x.tick_oxygen(self)if self:in_water()then if self.o2<=0 and self.life>0 then self:hurt(1,true)end;if self.o2>=1 then self.o2=self.o2-1;sfx(12)end else self.o2=self.max_o2 end end;function x.in_water(self)return self.pos:is_water()and self:act_pos():is_water()end;function x.turn_to_face_act(self)if self.act[2]>0 then self.facing=self.act[2]end end;function x.move_type(self)return enemy_variants[self.subpattern][self.variant][1]end;function x.determine_act(self)if self.life<=0 then self.act={a=0,d=0}return end;if self.stunned_turns>0 then self.stunned_turns=self.stunned_turns-1;if self.stunned_turns>0 then return end;ha=self.pos:actors_on_here()if ha and ha[1].life>0 and ha[1]~=self then self.stunned_turns=1;return end end;previous_facing=self.facing;follow_prints=self.pos:objects_on_here("prints","blood_prints")if follow_prints then self.facing=follow_prints[1].facing end;self.act[1]=1;self.act[2]=self.facing;self:determine_facing()tiles=self:tiles_ahead(previous_facing,true)for b,R in pairs(tiles)do if player.pos==R then self.act={2,previous_facing}self.facing=previous_facing;sfx(10)return end end;tiles=self:tiles_ahead(self.facing,true)for b,R in pairs(tiles)do if player.pos==R then self.act[1]=2;sfx(10)return end end;self:turn_to_face_act()end;function x.determine_facing(self)local ab=self:move_type()local apos=self:act_pos()if ab=="clockwise"then local ac=0;while apos==self.pos do local f=self.facing+1;if f>4 then f=5-f end;self.act[2],self.facing=f,f;apos=self:act_pos()ac=ac+1;if ac>4 then self.stunned_turns=3;return end end end;if ab=="still"then self.act={0,0}return end;if ab=="line"then if apos==self.pos then f=self.facing+2;if f>4 then f=abs(5-f)+1 end;self.act[2],self.facing=f,f end end;if ab=="cc"then local ac=0;while apos==self.pos do f=self.facing-1;if f<1 then f=4 end;self.act[2],self.facing=f,f;apos=self:act_pos()ac=ac+1;if ac>4 then self.stunned_turns=3;return end end end end;function x.do_avoidance(self)if self.act[1]>1 then return false end;local ad=self:act_pos()for a in all(global_objects.actor)do if a.life>0 then apos=a:act_pos()if a~=self and apos==ad and a.subpattern~="player"then self.act={0,0}return true end end end;return false end;function x.pickup_prints(self)for a in all(global_objects.actor)do if a.life<=0 and a.pos==self.pos then self.blood_prints=6;return end end end;function x.place_new_prints(self,a8)if self.life<=0 or self.pos:is_water()or self.pos:objects_on_here(nil,"trapdoor")then return end;p=self.pos:objects_on_here("prints",a8)if not p then d=self.act[2]if d<=0 then d=self.facing end;o=make_object(self.pos,{"prints",a8,d},true)add(global_objects.prints,o)add(global_objects.object,o)end end;function x.attempt_act(self,ae)a=self.act[1]if a==1 and ae==1 then self:attempt_move()end;if a==2 and ae==2 then self:attempt_shot()end end;function x.attempt_move(self)self.pos=self:act_pos()end;function x.attempt_shot(self)sfx(4)tiles={}for i,R in pairs(self:tiles_ahead(self.act[2],true))do hurts={}add(tiles,R)as=R:actors_on_here()if as then for a in all(as)do if a and self~=a and a.life>0 then add(hurts,a)end end end;l=#hurts;for a in all(hurts)do if l>1 then if a~=player and a.life>0 then a:hurt()self:queue_lasers(tiles,a)return end elseif l==1 then a:hurt()self:queue_lasers(tiles,a)return end end end end;function x.redirect_existing_prints(self,a8)if self.life<=0 then return end;p=self.pos:objects_on_here("prints",a8)if not p then return end;if self.act[2]>0 then p[1].facing=self.act[2]end end;function x.set_frames(self,pattern,W)self.frames={pattern=pattern,n=W}end;function x.queue_lasers(self,tiles,a,d)d=d or self.act[2]self.laser={frames=2,target=a.pos,dir=d,tiles={}}del(tiles,tiles[#tiles])self.laser.tiles=tiles end;function x.hurt(self,af,ag)af=af or 1;self.life=max(0,self.life-af)if self.life==0 then sfx(5)if not ag then self:set_frames("death",4)end else sfx(5,-1,1,3)if not ag then self:set_frames("hurt",2)end end end;function x.fall(self)self.life=-2;self:set_frames("fall",2)end;function x.tiles_ahead(self,d,ah)ah=ah or false;if d<=0 then d=self.facing end;p=self.pos+dir_to_vec(d)collected={}i=1;while not(p:is_wall()and(not p:is_glass()or not ah))do collected[i]=p;i=i+1;p=p+dir_to_vec(d)end;return collected end;function x.draw_sprite(self)local p=to_pixel(self.pos)local s=self:tile_shift()ssw,ssh,y_shift=8,8,0;if self:in_water()then ssh=4;y_shift=2 end;palswap=enemy_variants[self.subpattern][self.variant][2]pal(palswap[1],palswap[2])zspr(self:sprite(),p.x+s.x*2,p.y+s.y*2+y_shift,2,1,1,ssw,ssh)pal(palswap[1],palswap[1])end;function x.draw_below(self)if self.life>0 then return end;self:draw_sprite()end;function x.draw(self)if self.life<=0 then return end;self:draw_sprite()end;function x.draw_above(self)anim=animations[self.subpattern][7]if self.act[1]==2 or self==player and input_act==5 and turn_start==nil then d=self.act[2]if self==player and input_act==5 then d=input_dir end;if d<=0 then d=self.facing end;s=anim[d]tiles=self:tiles_ahead(d,true)for R in all(tiles)do t=to_pixel(R)zspr(s,t.x,t.y)end end;l=self.laser;s=anim[l.dir]if l.frames>0 then for R in all(l.tiles)do if l.frames==1 then pal(8,2)pal(11,3)end;t=to_pixel(R)l_dir_mod=(l.dir+1)%2;zspr(s,t.x,t.y)zspr(s,t.x+l_dir_mod*2,t.y+(1-l_dir_mod)*2)pal(8,8)pal(11,11)end end end;function x.sprite(self)frames_n=self.frames.n;pattern=self.subpattern;frames_pattern=self.frames.pattern;if frames_n>0 then if frames_pattern=="death"then return animations[pattern][5][4-frames_n+1]end;if frames_pattern=="hurt"then return animations[pattern][5][2-frames_n+1]end;if frames_pattern=="fall"then return animations[pattern][6][2-frames_n+1]end end;if self.life<=0 then if self.life==-2 then return 255 end;return animations[pattern][5][4]end;if self.stunned_turns>0 then return animations[pattern][8][frame%2+1]end;anim=animations[pattern][self.facing]if turn_start~=nil then if self.act[1]==1 then return anim[frame+1]end end;if input_act==6 and self==player and turn_start==nil then return animations[pattern][input_dir][1]end;if input_act==5 and self==player and turn_start==nil then anim=animations[pattern][input_dir]end;if self.act[1]==2 or input_act==5 and self==player and turn_start==nil then return anim[6]end;return default_sprite(pattern,self.facing)end;function x.tile_shift(self)apos=self:act_pos()if not(apos==self.pos)and turn_start then return make_vec2d((apos.x-self.pos.x)*biframe,(apos.y-self.pos.y)*biframe)end;return make_vec2d(0,0)end;n.__index=x;pos_map={{0,1,0,-1},{-1,0,1,0}}function dir_to_vec(ai)return make_vec2d(pos_map[1][ai],pos_map[2][ai])end;function make_vec2d(G,F)local t={x=G,y=F}setmetatable(t,r)return t end;function y.distance_to(self,H)local v=H-self;return sqrt(v.x*v.x+v.y*v.y)end;function y.is_adjacent(self,H)return self.x==H.x+1 and self.y==H.y or self.x==H.x-1 and self.y==H.y or self.x==H.x and self.y==H.y+1 or self.x==H.x and self.y==H.y-1 end;function get_global_objects(pattern,a8)pattern=pattern or a8;local aj={}for o in all(global_objects[pattern])do if not a8 or o.subpattern==a8 then add(aj,o)end end;return aj end;function y.objects_on_here(self,pattern,a8)local aj,ak=get_global_objects(pattern,a8),{}for o in all(aj)do if o.pos==self then add(ak,o)end end;if#ak>0 then return ak end;return nil end;function y.actors_on_here(self,al)al=al or""local Q={}for a in all(global_objects.actor)do if a.pos==self and a.subpattern~=al then add(Q,a)end end;if#Q>0 then return Q end;return nil end;function y.is_glass(self)m=lmapget(self)return m==119 or m==120 end;function y.is_wall(self)a=self:objects_on_here("door")if a and a[1].solid==1 then return true end;m=lmapget(self)return m>=64 and m<=127 end;function y.is_vault_gate(H)m=lmapget(H)return m==70 or m==71 end;function y.is_water(H)return lmapget(H)==182 end;function r.__add(a,am)return make_vec2d(a.x+am.x,a.y+am.y)end;function r.__sub(a,am)return make_vec2d(a.x-am.x,a.y-am.y)end;function r.__eq(a,am)return a.x==am.x and a.y==am.y end;r.__index=y;function check_type(v,t)return type(v)==t end;function copymt(o)local c;if type(o)=='table'then c={}for b,v in pairs(o)do c[b]=copymt(v)end else c=o end;return c end;function concat(an,ao)local ap={}for i=1,#an do ap[i]=an[i]end;for i=1,#ao do ap[#an+i]=ao[i]end;return ap end;function to_pixel(aq)return make_vec2d(aq.x*16,aq.y*16)end;function n_to_vec(W)return make_vec2d(8*(W%16),8*flr(W/16))end
__gfx__
00000000000000000000000000000000441444400000000000000000000000000000010080000000080000000000000000000000000000000000000000000000
0000000000444400000000000104444000411110010444400000000000444400004444100e044400000e08000000000000000000000000000000000002200220
00700700041111000044440004111110100f3f30041111100044440004111100041811408883114000808e800000000000000000000000000044440002002020
0007700001f3f30004111100004f3f30151ffff0004f3f300411110001f3f556043f3f000e8ef340100388140000000000000000000000000411110000020020
0007700004ffff0001f3f300000ffff015111f1f000ffff001f3f30004ffff500888fff01888f440108e8f14000388e1004444000000000001f3f30000200200
0070070000111000041fff0000f11f0000000000001110f0044fff0000111f000081110005811480051ff34480e88388041f110f000000000000000002002020
000000000f555f0000111f0000155000000000000f0551000111f1f0005550000f0551008058000805111e801188ff8401f1f301000000000000000002220220
000000000010100000f110000000010000000000001000000015111000101000000001000011000000f110e811f8844004f1ff0100f000f00000000000000000
000000000000000000000000000000000000000000000000000000000005000000000000000b0000008800000000000000000000000000003300003300000000
00000000004440000000000000444100000000000004140000000000004440000000000000000000008800000000000000800000000000003000000333000033
000000000444440000044400044414001041440000444140004440000444440000000000000b0000008000000000088800880000000088800000000030000003
00000000011111000044444001111100111114400011111004444400011111000b0b0b0b000000000000000000000088008800000000880000000000000bb000
000000000f441400001111100f44440015555100004444f0011111000f44140000000000000b00000000880000880000000000008800000000000000000bbb00
000000000044400000f4410001544000f11110f00005441004414f0001111f0000000000000000000000880008880000000008008880000000000000000b0000
000000000f555f00000555f0001510000000000000055100015551000055500000000000000b0000000008000000000000008800000000003000000330000003
000000000010100000f1110000100f000000000000f0010000111000001010000000000000000000000000000000000000008800000000003300003333000033
00000000000000000000000000100000004444000000010000000000000000000000000000008000000000000000000000000000000000000000000000000000
00000000004444000000000001444400041111000044441000000000004444000000000000000000000000000000000000000000002220000330033033000033
00000000041111000044440004111140103f3400041111400044440004111400000000000000800000000000000000000000000002eee2000300003030000003
00000000013f3f000411110000f3f34001fff410043f3f0000111140043f340000000000000000000000008000000000000000002e222e200000000000bbbb00
0000000000ffff0001f3f3000fffff000f111f0000fffff0003f3f1001f5f100080808080000800000008800000bb000000880002eee2e200000000000bb0000
0000000000111000041fff0000111100001150000011110001fff1000016110000000000000000008088888000bbbb00008888002ee22e200300003000b00000
000000000f555f0000111f00001550f0000000000f055100011f1100005f5000000000000000800000080800300000032000000202eee2000330033030000003
000000000010100000f5100000100000000000000000010000115f10001010000000000000000000000000003300003322000022002220000000000033000033
00000000000000000000000000000000044441440000000000000000000000000000000000000000000000000000000000000000000000000000099999900000
00000000004444000000000004444010011114000444401000000000004444000033300000222000005550000055500000555000005550000000090000900000
0000000000111140004444000111114003f3f00101111140004444000011114003bbb30002888200056665000566650005666500056665000000090000900000
00000000003f3f100011114003f3f4000ffff15103f3f40000111140655f3f103b3b3b3028828820566566505655665056565650566556500009000000009000
0000000000ffff40003f3f100ffff000f1f111510ffff000003f3f1005ffff403bb3bb3028282820565556505665565056555650565566500009000000009000
000000000001110000fff14000f11f00000000000f01110000fff44000f111003b3b3b3028828820565656505655665056656650566556500000090000000000
0000000000f555f000f111000005510000000000001550f00f1f11100005550003bbb30002888200056665000566650005666500056665000000090000900000
000000000001010000011f0000100000000000000000010001115100000101000033300000222000005550000055500000555000005550000000099999900000
0000000000000000000000000156651000100100000000000010010000150100015665100c11c110011c11c07656651077777777015665670000000000000000
00111111111111111111110001125110110110111001000101011010010510101115651110101011110101017756651077717776015665771111111100000000
01566555515665555556651000025000510000155111501155666655010610111555651001006105501600107756611055551555015661775555155500000000
016566666566566666665610010250106555555661556655515150511106101065661101c00511666611500c7756651066666566015665176666656600000000
01666666666666666666661001025010622222266656615650505050011601006611500c10116656656611017655651066566666015565676656666600000000
01566551155665551556651000025000510000155155101501010100111610115016001001565551155565107756651051555555015665775155555500000000
01566111115655111116651001125110110110110011000100000000010510101101110111565111111565117716651011111111011665776776766700000000
0156651001566110015665100156651000000000000000000000000000150101011c00c001566510015665107656651000000000015665677777777600000000
01566510015665100116651000111100010110000115651001001000001001000156651000100100015661100776667600000000000000000000000000000000
01566510111665111155651101555510115111500015510010110100010110100119511011011011110655111111116600000000000000000000000000000000
01566110155665515556655115444551115556110006100010166655566610100009500051000015101165155155566700000000000000000000000000000000
01566510666666666666666655555451055665510056610010160510150610100109501065555556c16165566665667600000000000000000000000000000000
01556510656566656665666554445451151565510115651001060500050601000109501069999996010516666666667700000000000000000000000000000000
01566510555665515556655554445451151551510015551010161010101610100009500051000015010015555555566700000000000000000000000000000000
01166510115665111111111154445510115655100011610000160101010610010119511011011011c01001111111116600000000000000000000000000000000
01566510000561000000000015555100051550100156650001051000001501000156651000000000010c10106777666700000000000000000000000000000000
01566510000000000156651000166510010000000000010001061000001601000156651000100100010000000000000000000000000000000000000000000000
0156611111111111111665100016651100510000001511101016010001061010011c511011011011005100000000000000000000000000000000000000000000
0156655155551555155665100156655111151010115666501016655555661010000c500051000015111510100000000000000000000000000000000000000000
0166666666666566666666100166666601516000015565001015051015051010010c501065555556015160000000000000000000000000000000000000000000
0165666666566666666656100165666500015110000155510105050005050100010c50106cccccc6000151100000000000000000000000000000000000000000
0156655551555555555665100156655100011500000016501010101010101010000c500051000015000115000000000000000000000000000000000000000000
0011111111111111111111000016651100100010000051100011010101011001011c511011011011001000100000000000000000000000000000000000000000
00000000000000000000000000156100000000110000110001001000001001000156651000000000000000110000000000000000000000000000000000000000
00111100011665100000000001566100000000000000000001511100005c75000010010000000000005c75000010010000000000000000000000000000000000
011551100156651001111111115561001111111015155100166510100107c01001011010011111110c00c0100101101000000000000000000000000000000000
01566110015565101155551515566510515555115666661005510010000cc00050000005111555550000000050c0000500000000000000000000000000000000
01566510015665101566566666666610666566516681666156500001010cc0107cccc7cc1566666601000010700000cc00000000000000000000000000000000
01556510015661101566666656665610666666516110166166510010010cc010c7cccc7c1566566601000c10c700000c00000000000000000000000000000000
01566510011551101115555515566510555551116100156106651010000c70005000000511555515000c00005000000500000000000000000000000000000000
011665100011110001111111115661001111111066555610156551510107c01001011010011111110107101001011c1000000000000000000000000000000000
01566510000000000000000000166100000000000166610051115500005cc5000010010000000000005cc5000010010000000000000000000000000000000000
0010010001566510000000000010010000000000000000000010010001000010001001000010010000100100bbbbbbbb88888888666666666666666600008000
010110100112511011011011010110100dccccd0000000000101101003bbbb30011651500116515001165150b333333b82222228611000111000111600088800
00000000000000005100001501555510d000000d000000000155551033333333016115100161151001611510b33bbb3b8282222861b308218208211688008800
0100001001000010600000560281182000dccd000055850003b11b300000000000582100005b3100005a9100b3bbbb3b82282228601110001110001688000880
010000100100001060000026028118200d0000d00000000003b11b30bbbbbbbb001285000013b5000019a500b3b3333b82228228608218208218200608800000
00000000000000005100001501555510000cc000005585000155551033333333015116100151161001511610b33bbb3b82228828600011100011100600008800
0101101001000010110110110101101001011010005555000101101001000010051561100515611005156110b333333b8222222861b9c8110001110600008880
0010010001000010000000000010010000100100000000000010010013bbbb31001001000010010000100100bbbbbbbb88888888666666666666666600000088
01566510000000007777677777777677001001000666776677676600001001000000000667777777776766608888888888888888bbbbbbbbbbbbbbbb00000000
01195110110110117677767777677767060110100167677777777760060110100101666706777677777777008222222222222228b33333333333333b00000000
00000000510000156777777767767777676060601006777776777601676060001006777706776776767776018288882929292928b3bbbb333993993b00010000
01000010600000567777777777777767677676760167777777676010677676100167777706777777776760108288222929292928b3b3bbb33993993b00171000
01000010600000967777676767767676777777670106767777777610777777600106767701676776777776108282222222222228b3bb3b333333333b00171000
00000000510000156777767767606066677677771067776777776001677677601067776700060676766760018222222929292928b33333333993993b00111000
01000010110110117777777706011016776777760677777777767610776777600677777701011060760610108222222222222228b33333333333333b00171000
01000010000000007776777600100100777777760066767776776000777777760066767700100100600000008888888888888888bbbbbbbbbbbbbbbb00000000
01566510000000007777677777776777777776777777677701000001010000017717617700000000000000000000000000000000000000000000000000055000
011c5110110110117766767776777777767766777677777710000310100003107116515700199100000000000000000000000000007777000005560000500050
0000000051000015676677776777666767776677677776660000030003000300616115170099a900000000000005500000677000077777700000056050000050
010000106000005677677777777776677777777777777667030010010300100176582167019a991000000800005d850006777700077777700650005000500500
01000010600000c677777777766777777767776776677777030100100001001076128567019aa910000556000056650000777700077777700650005550000000
0000000051000015677766776667767767667677766677770010013000180100615116170199a9100066666000066000006776000a7777a00065000500000050
01000010110110117777667777777777776677777777777701001031010310017515611719aa9a9100000000000000000000600000aaaa000006650000005000
01000010000000007777767677767776777777767776777610010010100100107716717601011010000000000000000000000000000000000000000055500000
0010010001555510005c750000100100000000000100010100100010000000000000000000000000000000000300030300000000000000000000000000000000
01011010500000050c00c0100101101000000000100110100101c00100000000000000000000000003bbbb303003303000000000000000000000000000000000
00000000050550500000000050c00005000bb00000100101011c1100000000000000000000c0ccc0d000000d0030030300000000000000000000000000000000
010000100000000001000010700000cc00b11b00010010101c011010005585000055b500001c1110003bb3000300303000000000000000000000000000000000
011111100000000001000c10c700000c00b33b0010010010001101c10000000000000000001111100d0000d03003003000000000000000000000000000000000
0000000000000000000c000050000005003bb300001001001100cc010055b5000055b50000ccccc0000bb0000030030000000000000000000000000000000000
01000010000000000107101001011c100003300001001001011c0110005555000055550000000000010110100300300300000000000000000000000000000000
0011110005555550005cc50000100100000000001001001010101000000000000000000000000000001001003003003000000000000000000000000000000000
00000000000000000000000000000000000001008000000008000000000000000000000000000000000000000000000000000000000000001010101020202020
00555500000000000005555005555000000555100e055500000e0800000000000022220000000000000000000000000000000000000000000001000100020002
05555500005555000055555055555000005855508883115000808e80000000000222220000000000000000000000000000000000000000001000100020002000
02f3f30005555500002f3f302f3f3000003f3f200e8ef350100388550000000002f8f80000000000000000000000000000000000000000000101010102020202
05ffff0002f3f300000ffff00fff55600888fff01888f520108e8f55000388e502ffff0000000000000000000000000000000000000000001010101020202020
00111000001fff0000f11f000111f5000081110005811080051ff32580e883880033000000000000000000000000000000000000000000000001000100020002
0f555f0000111f0000155000055500000f0551008058000805111e801188ff850f66f00000000000000000000000000000000000000000001000100020002000
0010100000f110000000010001010000000001000011000000f110e811f882500010100000000000000000000000000000000000000000000101010102020202
00000000000000000000000000006000007060007800000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00555000000000000055500000055500070555000555500000555000000555500000000000000000000000000000000000000000000000000000000000000000
05555500000555000555550000555550705555505555507005555570070555550000000000000000000000000000000000000000000000000000000000000000
05555200005555500555520000555520705555202f3f3007023f35077003f3f20000000000000000000000000000000000000000000000000000000000000000
00fff000005555200ffff00000f555f000f555000ffff00705fff107700ffff00000000000000000000000000000000000000000000000000000000000000000
001110000001110000511000001111f0001111f001111f55011ff66055f111100000000000000000000000000000000000000000000000000000000000000000
0f555f00000555f00015500000055500000555000555000000555000000055500000000000000000000000000000000000000000000000000000000000000000
0010100000f1110000100f0000010100000101000101000000101000000010100000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0055550000000000005555000055500000a90a0000a09a0000000000000000000000000000000000000000000000000000000000000000000000000000000000
05555550005555000555555005555500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
02f3f3500555555002f3f350023f3500000f3550000f355000000000000000000000000000000000000000000000000000000000000000000000000000000000
00ffff0002f3f3500fffff00056ff10000fff55000fff55000555500000000000000000000000000000000000000000000000000000000000000000000000000
00111000001fff000011110000f11100051f3550051f3550055f550f00000f000000000000000000000000000000000000000000000000000000000000000000
0f555f0000111f00001550f000555000151ff550151ff55002f5f305000005000000000000000000000000000000000000000000000000000000000000000000
0010100000f51000001000000010100011f0250011f0250005f5ff05000005000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00555500000000000555500000055550000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00555550005555000555550000055555000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
003f3f200055555003f3f2000003f3f2000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00ffff00003f3f200ffff0000655fff0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0001110000fff10000f11f00005f1110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00f555f000f111000005510000005550000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0001010000011f000010000000001010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__label__
55555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555
50000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
50666666666666666660000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
50622222222222222260000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
50622222222222222260000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
50622222222222222260000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
50627222777277727770000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
50667666676676667660000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
50007000070077007700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
50007000070070007000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
50007770777070007770000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
50000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
50000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
50666666666666666660000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
50611111111111111160000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
50611111111111111160000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
50611111111111111160000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
50611771777111111160000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
50667676667666666660000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
50007070777000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
50007070700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
50007700777000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
50000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
50000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
50000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
50000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
50000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
50000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
50000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
50000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
50000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
50000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
50000100000001000000010000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
50000001000000010000000100000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
50001110101011101010111010101110101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
50000101000001010000010100000101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
50000001011000010110000101100001011000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
50000001100000011000000110000001100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
50000010001000100010001000100010001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
50000000001100000011000000110000001100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
50000010001000100010001000100010001001000000010000000000000000000000000000000000000000000000000000000000000000000000000000000005
50000101c0010101c0010101c0010101c00100010000000100000000000000000000000000000000000000000000000000000000000000000000000000000005
5010011c1100011c1100011c1100011c110011101010111010100000000000000000000000000000000000000000000000000000000000000000000000000005
50001c0110101c0110101c0110101c01101001010000010100000000000000000000000000000000000000000000000000000000000000000000000000000005
5110001101c1001101c1001101c1001101c100010110000101100000000000000000000000000000000000000000000000000000000000000000000000000005
50001100cc011100cc011100cc011100cc0100011000000110000000000000000000000000000000000000000000000000000000000000000000000000000005
5010011c0110011c0110011c0110011c011000100010001000100000000000000000000000000000000000000000000000000000000000000000000000000005
50111010100010101000101010001010100000000011000000110000000000000000000000000000000000000000000000000000000000000000000000000005
50100100100000100100001001000010001001011000001000100100000001000000010000000100000001000000010000000100000001000000000000000005
50011011010001011010010110100101c001115111500101c0010001000000010000000100000001000000010000000100000001000000010000000000000005
5100101666555566665556661010011c110011555611011c11001110101011101010111010101110101011101010111010101110101011101010000000000005
50101016051051515051150610101c011010055665511c0110100101000001010000010100000101000001010000010100000101000001010000000000000005
51c1010605005050505005060100001101c115156551001101c10001011000010110000101100001011000010110000101100001011000010110000000000005
5c011016101001010100101610101100cc01151551511100cc010001100000011000000110000001100000011000000110000001100000011000000000000005
5110001601010000000001061001011c011011565510011c01100010001000100010001000100010001000100010001000100010001000100010000000000005
50000105100000000000001501001010100005155010101010000000001100000011000000110000001100000011000000110000001100000011000000000005
50000011110000100100001501000010001000100010001000100010001000100010001000100010001000100010001000100010001000000000000000000005
50000115511001011010010510100101c0010101c00101012202220222022201c0012202c202220222010101c0010101c0010101c00100111111111111111115
5010015661100000000001061011011c1100011c11000118818882888288811c11088282828881888200011c1100011c1100011c110001566555555515555555
50000156651001000010110610101c0110101c0110101c821082828882822c011082828282822c8280101c0110101c0110101c01101001656666666665666665
5110015565100100001001160100001101c1001101c100820288828282880011018282828288008802c1001101c1001101c1001101c101666666665666666655
50000156651000000000111610111100cc011100cc0111828282828282822200cc8281888c82228282012100cc011100cc011100cc0101566551515555555155
5010011665100101101001051010011c0110011c011001888180818c8188811c018801180188818c8118011c0110011c0110011c011001566111111111111115
50110156651000100100001501011010100010101000101010001010100010101000101010001010100010101000101010001010100001566510000000000005
50000156651000100100011565100000000000100100011c11c00010001000100010010010000010010000100100001001000010010001566510010001010105
50000156651001011010001551001515510001011010110101010101c0010101c001101101000101101001011010010110100101101001566510100110101005
5000015661100000000000061000566666105566665550160010011c1100011c1100101666555566665555666655556666555566665501566110001001010015
500001566510010000100056610066816661515150516611500c1c0110101c011010101605105151505151515051515150515151505101566510010010100105
5000015565100100001001156510611016615050505065661101001101c1001101c1010605005050505050505050505050505050505001556510100100101005
50000156651000000000001555106100156101010100155565101100cc011100cc01101610100101010001010100010101000101010001566510001001000015
5000011665100101101000116100665556100000000011156511011c0110011c0110001601010000000000000000000000000000000001166510010010010105
50000156651000100100015665000166610000000000015665101010100010101000010510000000000000000000000000000000000001566510100100101005
50000156651001555510015665100010010000100100015665100010001000100010001501000010010000100100001001000010010001566510010001010115
50000156651050000005015665100101101001011010015665100101c0010101c001010510100dccccd0010110100101101001011010011851101001101003b5
5000015661100505505001566110000000000000000001566110011c1100011c110001061011d000000d00000000000000000000000000000000001001013335
50000156651000000000015665100100001001000010015665101c0110101c0110101106101001dccd1001000010010000100100001001000010010010100105
5000015565100000000001556510555055500550555055555550555155510011555155565550055005500100555001005050010000100100001010010010bbb5
5000015665100000000001566517775777007707770777577757770777511107775777577711770c770000077750050757500000000000000000001001003335
5000011665100000000001166517570755175551751757575710751c075001175757570755175557555001011710755717100101101001000010010010010105
500001566510055555500156651770577107775075077757755075107700101777077057710777577750001071077710715000100100010000101001001013b5
50000156651000100100015665175757555057107507575757507500050000075007575755505710570001575550700757500000000000000000010001010105
5111111665100101101001566517070777177dcc7cd7071767117111711111171117171777177107701011177711111717111111111111111100100110101005
555515566510000000000156611000000000d000000d015665515156655555551555155665510000000015566551555515555555155555566510001001010015
55666666661001000010015665100100001001dccd10016666666566566666666566666666660100001066666666666665666666656666665610010010100105
5666666656100100001001556510010000100d0000d0016566656666666666566666656566650100001065656665665666666656666666666610100100101005
555555566510000000000156651000000000000cc000015665511556655551555555555665510000000055566551515555555155555515566510001001000015
51111111110001011010011665100101101001011010001665111156551111111111115665110101101011566511111111111111111111166510010010010105
50000000000000100100015665100010010000100100001561000156611000000000000561000010010000056100000000000000000001566510100100101005
51000010010000100100001665100010010000100100015665100156610000100100005c75000010010000100100001001000010010000166510000000000005
5010010110100102222000166511010110100101101001566111115561000dddd0100107c0100101101001011010010110100101101000166511111111111115
500000000000002222200156655155666655000000000156655115566510ddddd000000cc0000000000000000000000000000000000001566551555515555555
501001000010012f3f300166666651515051010000100166666666666610df3f3010010cc0100100001001000010010000100100001001666666666665666665
501001000010010ffff001656665505050500100001001656666566656100fffdd60010cc0100100001001000010010000100100001001656665665666666655
50000000000000f11f0001566551010101000000000001566555155665100111fd00000c70000000000000000000000000000000000001566551515555555155
5010010110100112201000166511000000000101101000111111115661000ddd10100107c0100101101001011010010110100101101000166511111111111115
51000010010000100100001561000000000000100100000000000016610001110100005cc5000010010000100100001001000010010000156100000000000005
50000000000000100100015665100010010000100100001001000016651000100100015665100010010001566510000000000000000001166510000000000005
51111111111001011010111665110222201001011010010110100016651101011010111665110101101011166511111111111101101111556511111111000005
55555155551155666655155665510222220000000000000000000156655155666655155665515566665515566551555515555100001555566551555665100005
556666656651515150516666666603f3f21001000010010000100166666651515051666666665151505166666666666665666000005666666666666656100005
56666666665150505050656566650ffff01001000010010000100165666550505050656566655050505065656665665666666000002666656665666666100005
555555555111010101005556655100f11f0000000000000000000156655101010100555665510101010055566551515555555100001555566555155665100005
51111111111000000000115665110102211001011010010110100016651100000000115665110000000011566511111111111101101111111111111665100005
50000000000000000000000561000010010000100100001001000015610000000000000561000000000000056100000000000000000000000000015665100005
510000100100001001000016651000100100001001000010010001566100001001000010010000100100005c7500001001000010010000100100015665100005
5010010110100101101000166511010110100101101001011010115561000101101001011010010110100107c010010110100101101001022220011251100005
500000000000000000000156655155666655000000005566665515566510000000000000000000000000000cc000000000000000000000222220000250000005
501001000010010000100166666651515051010000105151505166666610010000100100001001000010010cc0100100001001000010012f3f30010250100005
501001000010010388ed0165666550505050011111105050505056665610010000100100001001000010010cc0100100001001000010010ffff0010250100005
50000000000080e883880156655101010100000000000101010015566510000000000000000000000000000c7000000000000000000000f11f00000250000005
5010010110101188ff8d00166511000000000100001000000000115661000101101001011010010110100107c010010110100101101001122010011251100005
51000010010011f88dd00015610000000000001111000000000000166100001001000010010000100100005cc500001001000010010000100100015665100005
50000010010000100100015665100010010000100100001001000015010000100100001111000010010000166510001001000000000000000000015661000005
51111101101101011010111665100101101001011010010110100105101001011010011551100101101000166511010110101111111111111111115561000005
5555510000155000000515566510000000000000000000000000010610110000000001566110000bb00001566551000000005156655555551555155665100005
5666655555567cccc7cc6666661001000010010000100100001011061010010000100156651001b11b1001666666010000106566566666666566666666100005
566669999996c7cccc7c6666561001000010010000100100001001160100010000100155651001b33b1001656665011111106666666666566666566656100005
5555510000155000000555566510000000000000000000000000111610110000000001566510003bb30001566551000000001556655551555555155665100005
5511110110110101101011111100010110100101101001011010010510100101101001166510010330100016651101000010115655111111111111bbbbbbbb05
5110001001000010010000000000001001000010010000100100001501010010010001566510001001000015610000111100015661100000000000b333333b05
5510001001000010010000100100001001000010010000100100001001000010010001566510001001000156651000100100005c75000010010001b33bbb3b05
55100101101001011010010110100101101001011010010110100dccccd001011010011251100101101001125110010110100107c010010dddd001b3bbbb3b05
511000000000000bb00000000000000000000000000000000000d000000d0000000000025000015555100000000000000000000cc000000ddddd01b3b3333b05
55100100001001b11b100100001001000010010000100100001001dccd10010000100102501003b11b300100001001000010010cc0100103f3fd01b33bbb3b05
55100100001001b33b10011111100100001001111110010000100d0000d0011111100102501003b11b300100001001000010010cc01006ddfff001b333333b05
551000000000003bb30000000000000000000000000000000000000cc0000000000000025000015555100000000000000000000c700000df111001bbbbbbbb05
55100101101001033010010000100101101001000010010110100101101001000010011251100101101001000010010110100107c0100101ddd0011665100005
55555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555

__map__
ff64646554646454640000000000000000000000000000000000000000000000000000000000ff0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
65a6b6b6b6b64785476400000000000000000000000000000000000000000000000000000000ff0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
6446465457b66646675400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
7501b58465b65464544154546500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
64b5a6a6b6b6b6b6a650b0b5b564000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
006454b6b6b6b6658471b576b554640000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0072454ab6b65454b0b5b054b5b556645400000000000000000000000000000000ffffff0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000604ab6b66465b554c0b5b547b5b565000000000064ffffffff00000000ffffffffff00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000060414674e0465442b070664646646465644061456454640000000000ffffffffff00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000ff50b5b5b5b5c077b577f065a7b5b6b6b647b5b5e0b9e06400ff0000ffffffffff00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000ff50b570b570b571b5506564b55464646551694178b5787364ff0000ffffffffff00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000405269514673b5b9b550ffff6470b4765454b050b5d0f047b6650000ffffffffff00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000050b5b5718460464646730064c077b5b5f0b5b550b553b547b6b65400ff0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000006042b0b5b5b0c0b5b56041614562b56454b5b568c0b5b570b6b65400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000606142b570b553b5b558b584b5b554c0b5405261616973b6b65465000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000606173b5b5f040516174464657b5b547e047b5b550b6b6b665640000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000064637882785262645465b647b55460785242b550464657b6b664ffffff00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000005447c0b5b547a6b664b6b6a7b081b5b5b5508454b5b56646516151ffff00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000006447b588b54764b6b6b6b670b555b5b0b581b55084b5b5b5688750ffff00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000064b66646464667547246416162b550b5b5f0634651b0516161516151ffff00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000005464b6b6b5b5b553e047c0b5b56042b04673c077b5b5b5b563ffffffff00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000006464b6b6b585b5b5b560616146c077b5b463465146516182524200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000ff5464b6b6b5b553b5b584b5e0406246b073b5b5b577f0b5b54300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000064b6b66454544641597862c0b5b547b570b463b0416173ff000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000646400ff64b547b5b4b0b588b584b050b581b577f050ff000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000006460417842b5b5f04078516151b0516162ff000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000050d06342b04062b5b5c077b550ff0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000060615273b58188b553b581b550ff0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000063615242f0b5b5636162000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000060616161620000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000ffffffff00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000bfffffffffffffffffff00000000000000bf0000000000000000000000006061526152616200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__sfx__
000802021675016750177501675015750147501575015750137501475015750167501775017750177501775017750177501775017750167501575016750177501875018750187501875018750187501875018750
001000001a752000001a750000001a752000001a750000001a752000001a750000001a752000001a7520000019752000001975200000197520000019750000001575000000157500000015750000001575000000
011000001675000000167500000016750000001675000000167500000016750000001675000000167500000018750000001875000000187500000018750000001575000000157500000015750000001575000000
011000000e7500e7500e7500e7500000016750000001575013750117501075011750137500e750000000d7500d750000000e7500e75010750107500e7500e750000000d7500d7500000000000000000000000000
00120000136400b620046100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000800000f040110300e020110100217001170011500115002100215001d50035600366003760037600386003860038600376003560034600326002f6002b60000000236001d6001760014600106000000000000
00100000160401f0303b7000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00050000376403c65037660336602f6502b640246301e630126200e6100a610086100c60005600206000c600046001f6001660010600000000000000000000000000000000000000000000000000000000000000
000a00000114001060010000b600056000b60011f0011f0011f0011f0011f0011f0011f0011f0011f0011f0011f00000000000000000000000000000000000000000000000000000000000000000000000000000
00060000097201d0000c0000200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00040000147401e7401e7301e7201e7101e7001f7001f700207001e70000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000800000a1200b1300b1300110001100077000550005500045000350002500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000800001a730167401a7000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000c00000712006120071200612000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0008000025710277202c7203173031710000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000800002151024520265202651000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00080000267300a7102d7202d7200a710000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000800000d750017300d7500d75001730000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0008000027510295102b5202e52032520335303254033530325203351000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000001604017040180301802000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000001804017040160301602000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000c0000175101b5101c5101e5101d5201e5201d5201e5201d5202353022530235302253023540225402353023520000000000000000000000000000000000000000000000000000000000000000000000000000
__music__
00 01024344

